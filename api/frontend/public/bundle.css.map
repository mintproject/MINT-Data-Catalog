{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/SearchForm.svelte",
    "../src/Dataset.svelte",
    "../src/DatasetSummary.svelte",
    "../src/Timeline.svelte",
    "../src/Map.svelte",
    "../src/KeyVal.svelte",
    "../src/EditableContent.svelte",
    "../src/NestedKeyVal.svelte"
  ],
  "sourcesContent": [
    "<script>\n    // import SearchForm from './SearchForm.svelte';\n    // import RegistrationForm from './RegistrationForm.svelte';\n    // export let sidebarOpen = false;\n\n    let renderHeader = function inIframe() {\n        try {\n            return window.self === window.top;\n        } catch (e) {\n            // we are in an iframe, so no need to render header\n            // https://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\n            return false;\n        }\n    }();\n\n    let path = window.location.pathname;\n    // console.log(JSON.stringify(window.location));\n    // console.log(\"in iframe? \" + !renderHeader);\n\n    import Router from './router';\n</script>\n\n<style>\n    h1 {\n        color: purple;\n    }\n\n    .app {\n        display: grid;\n        grid-template-columns: auto minmax(0, 1fr); /* Side nav is hidden on mobile */\n        grid-template-rows: 50px 1fr 50px;\n        grid-template-areas:\n                'sidenav header'\n                'sidenav main'\n                'sidenav footer';\n        /*min-height: 100vh;*/\n        /*height: 100%;*/\n    }\n\n    .sidenav {\n        /*display: none;*/\n        grid-area: sidenav;\n        /*background-color: #64bfbc;*/\n        background-color: #dddddd;\n        /*display: flex;*/\n        /*flex-direction: column;*/\n        height: 100%;\n        width: 50px;\n        /*position: fixed;*/\n        overflow-y: auto;\n        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.16), 0 0 0 1px rgba(0, 0, 0, 0.08);\n        z-index: 2; /* Needs to sit above the hamburger menu icon */\n        /*transform: translateX(-245px);*/\n        transition: all .6s ease-in-out;\n    }\n    .sidenav.active {\n        width: 250px;\n        background-color: antiquewhite;\n        /*transform: translate(0);*/\n    }\n\n    .main {\n        grid-area: main;\n        height: 100%;\n        /*background-color: #dddddd;*/\n    }\n\n    header {\n        /*display: inline-block;*/\n        /*position: absolute;*/\n        grid-area: header;\n        align-self: stretch;\n        align-items: center;\n        background-color: #f5f5f5;\n        /*text-align: center;*/\n        /*padding: 1.5em;*/\n    }\n    header img {\n        box-sizing: border-box;\n        padding-left: 10px;\n        padding-right: 10px;\n        padding-top: 5px;\n        padding-bottom: 5px;\n        width: 100px;\n        height: 100%;\n    }\n\n    header .title {\n        font-size: 150%;\n        margin-left: 5px;\n        vertical-align: middle;\n        position: absolute;\n        line-height: 50px;\n        /*display: grid;*/\n        /*grid-template-columns: 10% 40% 50%; !* Side nav is hidden on mobile *!*/\n        /*grid-template-areas: 'logo title right';*/\n        /*align-content: center;*/\n        /*justify-items: left;*/\n        /*line-height: 40px;*/\n        /*height: 40px;*/\n        /*text-align: center;*/\n    }\n\n    header ul {\n        float: right;\n        display: inline;\n        text-align: right;\n        list-style: none;\n        padding-right: 40px;\n        padding-left: 25px;\n    }\n    header ul li {\n        padding-right: 10px;\n        display: inline-block;\n    }\n    header ul li a {\n        color: #464647;\n        text-align: center;\n        font-size: 17px;\n    }\n    header ul li a:hover {\n        /*background-color: #ddd;*/\n        color: black;\n    }\n    .active {\n        /*background-color: #4CAF50;*/\n        font-weight: bolder;\n    }\n\n    main {\n        padding: 1.5em;\n    }\n</style>\n\n<div class=\"app\">\n    {#if renderHeader}\n    <header class=\"header\">\n        <img class=\"logo\" src=\"/mint_logo.png\" alt=\"MINT Logo\"/>\n        <span class=\"title\" >Data Catalog</span>\n        <ul>\n            <li><a href=\"/\" class:active=\"{path === '/'}\">Search</a></li>\n            <li><a href=\"/documentation\" class:active=\"{path.includes('documentation')}\">API Documentation</a></li>\n<!--            <li><a href=\"/registration\" class:active=\"{path.includes('registration')}\">Registration</a></li>-->\n        </ul>\n    </header>\n    {/if}\n\n<!--    <aside class=\"sidenav\" class:active=\"{sidebarOpen}\">-->\n<!--    </aside>-->\n\n    <main class=\"main\">\n        <svelte:component this={Router(path)}></svelte:component>\n<!--        <RegistrationForm/>-->\n<!--        <div><SearchForm/></div>-->\n<!--        <button on:click={() => sidebarOpen = !sidebarOpen}>Toggle</button>-->\n    </main>\n</div>",
    "<script>\n    import {datasetNameSearch, querySpatialCoverage, datasetSpatialCoverage, queryTemporalCoverage} from \"./stores\";\n    import Map from './Map.svelte';\n    import Timeline from './Timeline.svelte';\n    import DatasetSummary from './DatasetSummary.svelte';\n\n    $: searchDisabled = ($datasetNameSearch === '' && $querySpatialCoverage === {});\n    let promise;\n    let results = [];\n    let searchPerformed = false;\n    let isSearching = false;\n    let datasetCoverageGeometry = {};\n\n    let selectedDataset;\n    let selectedDatasetIndex;\n\n    let mapComponent;\n    let timelineComponent;\n\n    console.log(`datasetNameSearch: ${$datasetNameSearch}`);\n\n    async function queryDataCatalog() {\n        // const url = \"https://api.mint-data-catalog.org/datasets/search_v2\";\n        const url = \"http://localhost:7000/datasets/search_v2\";\n        const query = {\n            \"limit\": 500\n        };\n\n        if ($datasetNameSearch !== '') {\n            query[\"search_query\"] = [$datasetNameSearch];\n        }\n\n        if (!(Object.keys($querySpatialCoverage).length === 0 && $querySpatialCoverage.constructor === Object)) {\n            query[\"spatial_coverage\"] = $querySpatialCoverage;\n        }\n\n        if (!(Object.keys($queryTemporalCoverage).length === 0\n            && $queryTemporalCoverage.constructor === Object\n            && $queryTemporalCoverage['start_time'] !== undefined\n            && $queryTemporalCoverage['end_time'] !== undefined\n        )) {\n            query[\"temporal_coverage\"] = $queryTemporalCoverage;\n        }\n        // Default options are marked with *\n        const response = await fetch(url, {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrer: 'no-referrer', // no-referrer, *client\n            body: JSON.stringify(query) // body data type must match \"Content-Type\" header\n        });\n        // return await response.json(); // parses JSON response into native JavaScript objects\n\n        const payload = await response.json();\n        results = await payload;\n        isSearching = false;\n\n        if (response.ok) {\n            searchPerformed = true;\n            // console.log(JSON.stringify(payload));\n        } else {\n            throw new Error(payload);\n        }\n    }\n\n    function handleClick() {\n        results = [];\n        isSearching = true;\n        selectedDataset = undefined;\n        selectedDatasetIndex = undefined;\n        timelineComponent.hideTemporalCoverage();\n        mapComponent.hideGeoJSON();\n\n        promise = queryDataCatalog();\n    }\n\n    function handleKeyDown(event) {\n        const ENTER_keycode = 13;\n\n        if (event.keyCode === ENTER_keycode) {\n            const search_button = document.getElementById('search-button');\n            search_button.classList.add(\"active\");\n            // results = [];\n            // isSearching = true;\n            // promise = queryDataCatalog();\n        }\n\n    }\n    function handleKeyUp(event) {\n        const ENTER_keycode = 13;\n\n        if (event.keyCode === ENTER_keycode) {\n            const search_button = document.getElementById('search-button');\n\n            search_button.classList.remove(\"active\");\n            search_button.click();\n        }\n    }\n\n    function selectDataset(datasetDefinition, index) {\n        const spatial_coverage = datasetDefinition['dataset_spatial_coverage'] || {};\n        const dataset_metadata = datasetDefinition['dataset_metadata'] || {};\n        const temporal_coverage = dataset_metadata['temporal_coverage'] || {};\n\n        if (index !== selectedDatasetIndex) {\n            // clear existing geoJSON layer\n            mapComponent.hideGeoJSON();\n            mapComponent.displayGeoJSON(datasetDefinition['dataset_spatial_coverage'] || {});\n            timelineComponent.displayTemporalCoverage(temporal_coverage['start_time'], temporal_coverage['end_time']);\n            selectedDataset = Object.assign({}, datasetDefinition);\n            // selectedDataset = selectedDataset;\n            // console.log(JSON.stringify(selectedDataset))\n            selectedDatasetIndex = index;\n        }\n    }\n\n    function handleMouseLeave() {\n        timelineComponent.hideTemporalCoverage();\n        mapComponent.hideGeoJSON();\n        selectedDataset = undefined;\n    }\n\n    function is_mint_understandable(ds) {\n        return ds.dataset_metadata !== undefined && ds.dataset_metadata.hasOwnProperty(\"resource_repr\");\n    }\n</script>\n<style>\n\n\n    .scrollable {\n        height: 100%;\n        overflow-x: hidden;\n        overflow-y: auto;\n        box-sizing: border-box;\n    }\n\n    #search-button:active {\n        background-color: rgb(117, 168, 63);\n    }\n\n    #search-button {\n        background-color: rgb(4, 143, 216);\n        color: #fefefe;\n    }\n\n\n\n    /*button#search-button.active, #search-button:focus {*/\n    /*    background-color: rgb(117, 168, 63) !important;*/\n    /*    border-color: #666;*/\n    /*}*/\n\n    /*#search-button .disabled {*/\n    /*    background-color: inherit;*/\n    /*}*/\n\n\n\n    /*.map-overlay {*/\n    /*    position: absolute;*/\n    /*    bottom: 5px;*/\n    /*    left: 5px;*/\n    /*    z-index: 4;*/\n    /*}*/\n    .filter_old {\n        padding-left: 5px;\n        padding-right: 5px;\n        margin-bottom: 10px;\n        display: flex;\n        justify-content: flex-start;\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n\n    .filter {\n        grid-area: right;\n        padding-left: 20px;\n    }\n\n    .search_results {\n        grid-area: left;\n        /*width: 400px;*/\n        height: 100vh;\n        display: flex;\n        flex-direction: column;\n        /*float: left;*/\n        box-sizing: border-box;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    .dataset_id {\n        color: #bbb;\n        font-size: 60%;\n    }\n\n    .dataset_preview {\n        display: grid;\n        grid-template-columns: 2em auto;\n        grid-template-rows: auto;\n        grid-template-areas:\n                \"dataset-preview-left dataset-preview-right\";\n\n        height: 100%;\n        max-height: 100px;\n        max-width: 285px;\n        width: 99%;\n        cursor: pointer;\n        /*padding: 2px;*/\n        margin-bottom: 5px;\n        /*box-sizing: border-box;*/\n        border-top-right-radius: 75px;\n        border-bottom-right-radius: 75px;\n    }\n\n    .dataset_preview_left {\n        grid-area: dataset-preview-left;\n        align-content: center;\n        justify-content: center;\n        padding-left: 0.35em;\n        padding-top: 0.35em;\n    }\n\n    .dataset_preview_right {\n        padding-top: 1em;\n        padding-bottom: 1em;\n        padding-right: 2em;\n        box-sizing: border-box;\n        grid-area: dataset-preview-right;\n    }\n\n    .dataset_preview:hover {\n        background-color: #f3f3f3;\n    }\n\n    .dataset_preview.selected {\n        background-color: #efefef;\n    }\n\n    .display {\n        display: grid;\n        grid-template-columns: 300px auto;\n        grid-template-rows: auto;\n        grid-template-areas:\n                \"left right\";\n    }\n\n    .icon {\n        position: relative;\n        left: -1.6em;\n        top: 1em;\n        float: left;\n    }\n\n</style>\n\n<div class=\"display\">\n    {#if isSearching}\n        <section>\n            <h2>Searching...</h2>\n        </section>\n\n    {:else if (!isSearching && searchPerformed)}\n    <section>\n        <h2 style=\"margin-bottom:15px\">Found {results.length} results</h2>\n        <hr style=\"border: 0.5px solid #eee\">\n        <div class=\"search_results\">\n            {#if results.length > 0}\n            {#each results as dataset, i}\n\n            <div class=\"dataset_preview\"\n                 class:selected=\"{selectedDatasetIndex === undefined && i === 0 ? (() => { selectDataset(dataset, i); return true })() : i === selectedDatasetIndex}\"\n                 on:mousedown='{(e) => {e.preventDefault(); selectDataset(dataset, i)}}'\n            >\n                <span class=\"dataset_preview_left\">\n                    {#if is_mint_understandable(dataset)}\n                        {'\\u2B50'}\n                    {/if}\n                </span>\n\n                <div class=\"dataset_preview_right\">\n                        <span class=\"dataset_name\">\n                            <strong>{dataset.dataset_name.length > 50 ? dataset.dataset_name.substring(0, 50) + '...' : dataset.dataset_name}</strong>\n                        </span>\n                    <div><span class=\"dataset_id\">id: {dataset.dataset_id}</span></div>\n                </div>\n            </div>\n            {/each}\n            {/if}\n        </div>\n    </section>\n    {/if}\n\n    <div class=\"filter\">\n        <span>\n        <input type=\"text\" style=\"width:757px; outline: none; margin-left: 20px\" bind:value={$datasetNameSearch} on:keyup={handleKeyUp} on:keydown={handleKeyDown}>\n        <button id='search-button' disabled={searchDisabled} on:click={handleClick}>\n        Search Datasets\n        </button>\n    </span>\n        <span style=\"display: flex\">\n            <Map lat={10} lon={34} zoom={3.5} bind:this={mapComponent} />\n            <Timeline bind:this={timelineComponent} />\n        </span>\n\n        <!--        <div class=\"map-overlay\">-->\n        <!--        </div>-->\n        {#if (selectedDataset !== undefined)}\n        <DatasetSummary dataset={selectedDataset} />\n        {/if}\n    </div>\n</div>\n\n\n\n",
    "<script>\n    import {datasetNameSearch} from './stores';\n    import {dataCatalogRequest} from './utils.js';\n    import NestedKeyVal from './NestedKeyVal.svelte';\n    import KeyVal from './KeyVal.svelte';\n    import EditableContent from './EditableContent.svelte';\n    import DTrans from './DTrans.svelte';\n\n    console.log(\"STORES \" + $datasetNameSearch);\n\n    let pathArray = window.location.pathname.split('/');\n\n    function is_mint_understandable(ds) {\n        return ds.metadata !== undefined && ds.metadata.hasOwnProperty(\"resource_repr\");\n    }\n\n    function isGuid(str) {\n        str = str.replace(\"'\", \"\").replace('\"', '');\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(str);\n    }\n\n    const reserved_dataset_metadata_keys = new Set(['category_tags', 'license', 'description', 'version', 'source_url', 'limitations']);\n\n    function stateManager() {\n\n        const statuses = ['ready', 'editing', 'reviewing'];\n        const displayNames = {\n            'ready': undefined,\n            'editing': ''\n        };\n\n        let statusIdx = 0;\n\n        function nextState() {\n            statusIdx = statusIdx === statuses.length - 1 ? 0 : statusIdx + 1\n        }\n\n        function previousState() {\n            statusIdx = statusIdx === 0 ? statuses.length - 1 : statusIdx - 1\n        }\n\n        function currentState() {\n            return statuses[statusIdx];\n        }\n\n        return Object.freeze({\n            nextState,\n            previousState,\n            currentState\n        })\n    }\n\n    const state = stateManager();\n\n    let dataset;\n    let dataset_id = pathArray[2];\n    let datasetResults = {result: undefined, isError: false, error: undefined};\n    let datasetVariableResults = {result: undefined, isError: false, error: undefined};\n    let datasetResourcesResults = {result: undefined, isError: false, error: undefined};\n\n    let datasetEdits = {};\n    $: dataset = datasetResults['result'];\n    $: {console.log(dataset)};\n    $: variables = (datasetVariableResults['result'] !== undefined\n        && datasetVariableResults['result']['dataset'] !== undefined\n        && datasetVariableResults['result']['dataset']['variables']\n    ) ? datasetVariableResults['result']['dataset']['variables'] : [];\n\n    $: resources = (datasetResourcesResults['result'] !== undefined\n        && datasetResourcesResults['result']['dataset'] !== undefined\n        && datasetResourcesResults['result']['dataset']['resources']\n    ) ? datasetResourcesResults['result']['dataset']['resources'] : [];\n\n    $: isEdited = dataset !== undefined && Object.entries(datasetEdits).filter(([key, val]) => dataset[key] !== val && dataset.metadata[key] !== val).length > 0;\n\n    let isEditing = false;\n\n    let finishedFetchingDatasets = false;\n    let finishedFetchingDatasetVariables = false;\n    let finishedFetchingDatasetResources = false;\n    let isError = false;\n\n    const query = {\n        \"dataset_id\": dataset_id\n    };\n\n    const datasetRequestor = dataCatalogRequest(\"http://localhost:7000/datasets/get_dataset_info\", query);\n    const datasetVariablesRequestor = dataCatalogRequest(\"http://localhost:7000/datasets/dataset_variables\", query);\n    const datasetResourcesRequestor = dataCatalogRequest(\"http://localhost:7000/datasets/dataset_resources\", query);\n\n    // const datasetRequestor = dataCatalogRequest(\"https://api.mint-data-catalog.org/datasets/get_dataset_info\", query);\n    // const datasetVariablesRequestor = dataCatalogRequest(\"https://api.mint-data-catalog.org/datasets/dataset_variables\", query);\n    // const datasetResourcesRequestor = dataCatalogRequest(\"https://api.mint-data-catalog.org/datasets/dataset_resources\", query);\n\n\n    function handleDatasetsResponse(responsePayload, reason) {\n        finishedFetchingDatasets = true;\n        if (responsePayload !== undefined) {\n            datasetResults.result = responsePayload;\n        } else {\n            // doing assignment in a single call to avoid multiple Svelte invalidations and therefore refreshes\n            datasetResults = Object.assign(datasetResults, {error: reason, isError: true});\n        }\n    }\n\n    function handleDatasetVariablesResponse(responsePayload, reason) {\n        finishedFetchingDatasetVariables = true;\n        if (responsePayload !== undefined) {\n            datasetVariableResults.result = responsePayload;\n        } else {\n            datasetVariableResults = Object.assign(datasetVariableResults, {error: reason, isError: true});\n        }\n    }\n\n    function handleDatasetResourcesResponse(responsePayload, reason) {\n        finishedFetchingDatasetResources = true;\n        if (responsePayload !== undefined) {\n            datasetResourcesResults.result = responsePayload;\n        } else {\n            datasetResourcesResults = Object.assign(datasetResourcesResults, {error: reason, isError: true});\n        }\n    }\n\n    function startEditing() {\n        isEditing = true;\n    }\n\n    function cancelEditing() {\n        isEditing = false;\n        datasetEdits = {};\n        dataset = dataset;\n    }\n\n\n\n    datasetRequestor(handleDatasetsResponse);\n    datasetVariablesRequestor(handleDatasetVariablesResponse);\n    datasetResourcesRequestor(handleDatasetResourcesResponse);\n\n    function handleClick() {\n        window.location.href = '/';\n    }\n\n    const dataset_schema = {\n        id: {\n            type: \"String\",\n            required: true,\n            editable: false\n        },\n        name: {\n            type: \"String\",\n            required: true,\n            editable: true\n        },\n        description: {\n            type: \"Text\",\n            required: false,\n            editable: true,\n            default: \"\"\n        },\n        created_at: {\n            type: \"DateTime\",\n            editable: false,\n            required: true\n        },\n        metadata: {\n            type: \"Object\",\n            editable: true,\n            required: false,\n            default: {}\n        }\n    };\n\n    function handleMessage(event) {\n        const key = event.detail.key;\n        const value = event.detail.value;\n\n        if (datasetEdits[key] === undefined && dataset[key] !== value) {\n            datasetEdits[key] = value;\n        } else if (dataset[key] === value) {\n            delete datasetEdits[key];\n        }\n\n        datasetEdits = datasetEdits;\n\n        console.log(event);\n        console.log(datasetEdits);\n    }\n\n    function saveChanges() {\n        Object.entries(datasetEdits).forEach(([key, val]) => {\n            if (dataset[key] !== undefined) {\n                dataset[key] = val;\n            } else {\n                dataset.metadata[key] = val;\n            }\n        });\n\n        datasetEdits = {};\n        dataset = dataset;\n        isEditing = false;\n    }\n\n</script>\n\n\n<style>\n    .dataset_summary {\n        border-style: solid;\n        border-color: #eee;\n        border-width: 1px;\n        border-radius: 5px;\n        padding: 10px;\n        margin-left: 10px;\n        margin-right: 10px;\n        margin-bottom: 30px;\n        background-color: #fdfdfd;\n        box-shadow: 2px 2px 3px 1px #eee;\n    }\n\n    .dataset_summary h4 {\n        margin-bottom: 0px;\n    }\n\n    .dataset_summary p {\n        margin-top: 2px;\n    }\n\n    .dataset_id {\n        color: #bbb;\n        font-size: 75%;\n        padding-left: 0.5em;\n    }\n\n    .variable_id {\n        color: #bbb;\n        font-size: 75%;\n    }\n\n    .resource_id {\n        color: #bbb;\n        font-size: 75%;\n    }\n\n    .resource_summary, .variable_summary {\n        padding-top: 10px;\n        padding-bottom: 10px;\n        margin-bottom: 30px;\n        background-color: #fdfdfd;\n    }\n\n    h2 {\n        margin-top: 50px;\n    }\n\n    ul {\n        list-style-type: none;\n        margin: 1px;\n        padding: 0;\n    }\n    li {\n        margin-top: 10px;\n        margin-bottom: 5px;\n    }\n\n    dl {\n        display: grid;\n        grid-template-columns: max-content auto;\n    }\n\n    dt {\n        grid-column-start: 1;\n        font-size:85%;\n        font-weight: lighter;\n    }\n    dd {\n        grid-column-start: 2;\n        font-size: 90%;\n        color: #333333;\n    }\n\n    fieldset {\n        border-width: 0.5px;\n        border-color: #eee;\n        border-radius: 2px;\n    }\n    fieldset legend {\n        color: #9a9a9a;\n        font-size: 90%;\n    }\n</style>\n\n<button on:click={handleClick}>\n    Back to search\n</button>\n\n<!--<button on:click={toggleEditing}>{isEditing && isEdited ? 'Save Changes' : 'Edit'}</button>-->\n\n<!--{#if isEditing}-->\n<!--    <button on:click={cancelEditing}>Cancel Editing</button>-->\n<!--    {#if isEdited}-->\n<!--        <button on:click={saveChanges}>Save Changes</button>-->\n<!--    {/if}-->\n<!--{:else}-->\n<!--    <button on:click={startEditing}>Edit</button>-->\n<!--{/if}-->\n\n{#if finishedFetchingDatasets}\n<section>\n    {#if datasetResults.isError}\n        <div style=\"background-color: #bf414b\">\n            {JSON.stringify(datasetResults, null, 2)}\n        </div>\n    {:else}\n    <div class=\"dataset_summary\">\n        <div>\n            <h1 style=\"margin-bottom:0\"><EditableContent contentKey='name' contentValue={dataset.name} isEditable={isEditing} on:message={handleMessage}/></h1>\n            <div><span class=\"dataset_id\">id: {dataset.dataset_id}</span></div>\n        </div>\n        <hr>\n\n        {#if (is_mint_understandable(dataset))}\n            <DTrans dataset_id={dataset.dataset_id} />\n            <hr>\n        {/if}\n\n        <div>\n            <h4>Description</h4>\n            <p><EditableContent contentKey='description' contentValue={dataset.description} isEditable={isEditing} on:message={handleMessage}/></p>\n        </div>\n        <div>\n            <h4>Category Tags</h4>\n            <p>{dataset.metadata && dataset.metadata['category_tags'] ? dataset.metadata['category_tags'] : 'N/A'}</p>\n        </div>\n        <div>\n            <h4>Source URL</h4>\n            <p>\n                {#if dataset.metadata && dataset.metadata['source_url']}\n                    <a href=\"{dataset.metadata['source_url']}\" target=\"_blank\">{dataset.metadata['source_url']}</a>\n                {:else}\n                'N/A'\n                {/if}\n            </p>\n        </div>\n        <div>\n            <h4>Limitations</h4>\n            <p>{dataset.metadata && dataset.metadata['limitations'] ? dataset.metadata['limitations'] : 'N/A'}</p>\n        </div>\n        <div>\n            <h4>Version</h4>\n            <p>{dataset.metadata && dataset.metadata['version'] ? dataset.metadata['version'] : 'N/A'}</p>\n        </div>\n\n        {#if dataset.metadata}\n<!--        <h4>Additional Metadata</h4>-->\n<!--        <ul>-->\n<!--            {#each Object.entries(dataset.metadata) as metadata_arr}-->\n<!--                {#if metadata_arr[1] !== undefined && metadata_arr[1] !== null && !Number.isNaN(metadata_arr[1]) && metadata_arr[1].constructor === Object}-->\n<!--                    <NestedKeyVal key={metadata_arr[0]} vals={metadata_arr[1]}/>-->\n<!--                {:else}-->\n<!--                    <KeyVal key={metadata_arr[0]} val={metadata_arr[1]} />-->\n<!--                {/if}-->\n\n<!--            {/each}-->\n<!--        </ul>-->\n\n        <NestedKeyVal key={'Additional Metadata'} vals={dataset.metadata} />\n\n<!--        <h4>Additional Metadata</h4>-->\n<!--            <dl>-->\n<!--                {#each Object.entries(dataset.metadata) as metadata}-->\n<!--                {#if !reserved_dataset_metadata_keys.has(metadata[0]) && metadata[0] !== 'spatial_coverage'}-->\n<!--                    <dt>{metadata[0]}:</dt>-->\n<!--                    {#if (typeof metadata[1] === 'object')}-->\n<!--                    <dd>{JSON.stringify(metadata[1])}</dd>-->\n<!--                    {:else if (String(metadata[1]).substring(1, 10).includes(\"://\"))}-->\n<!--                    <dd><a href={metadata[1]}>{metadata[1]}</a></dd>-->\n<!--                    {:else}-->\n<!--                    <dd>{metadata[1]}</dd>-->\n<!--                    {/if}-->\n<!--                {/if}-->\n<!--                {/each}-->\n<!--            </dl>-->\n\n        {/if}\n    </div>\n    {/if}\n</section>\n{/if}\n\n{#if finishedFetchingDatasetVariables}\n<section>\n    <h2>Variables ({variables.length})</h2>\n    <hr>\n    {#if datasetVariableResults.isError}\n    <div style=\"background-color: #bf414b\">\n        Something went wrong and variables could not be loaded. Please try again a little later.\n<!--        {JSON.stringify(datasetVariableResults, null, 2)}-->\n    </div>\n    {:else}\n        <ul>\n            {#each variables as variable, i}\n\n            <li class=\"variable_summary\">\n                <div><span class=\"variable_name\">{variable.variable_name}</span></div>\n                <div><span class=\"variable_id\">id: {variable.variable_id}</span></div>\n                <dl>\n                    <dt>Standard Variable Name:</dt>\n                    <dd>{variable.standard_variables[0].standard_variable_name}</dd>\n                    <div><span class=\"variable_id\">standard_variable_id: {variable.standard_variables[0].standard_variable_id}</span></div>\n                    <dt>Standard Variable URI:</dt>\n                    <dd><a href={variable.standard_variables[0].standard_variable_uri} target=\"_blank\">{variable.standard_variables[0].standard_variable_uri}</a></dd>\n                    <dt>Standard Variable Ontology:</dt>\n                    <dd>{variable.standard_variables[0].standard_variable_ontology}</dd>\n\n                    {#if variable.variable_metadata}\n                        {#each Object.entries(variable.variable_metadata) as metadata}\n                        <dt>{metadata[0]}:</dt>\n                            {#if (typeof metadata[1] === 'object')}\n                            <dd>{JSON.stringify(metadata[1])}</dd>\n                            {:else if (String(metadata[1]).substring(1, 10).includes(\"://\"))}\n                            <dd><a href={metadata[1]}>{metadata[1]}</a></dd>\n                            {:else}\n                            <dd>{metadata[1]}</dd>\n                            {/if}\n                        {/each}\n                    {/if}\n                </dl>\n            </li>\n            {/each}\n        </ul>\n    {/if}\n</section>\n{/if}\n\n{#if finishedFetchingDatasetResources}\n<section>\n    <h2>Resources ({resources.length === 200 ? '200+' : resources.length})</h2>\n    <hr>\n    {#if resources.length === 200}\n    <p style=\"background-color: yellow\">\n        <strong>Note: this dataset has more than 200 resources and complete list cannot be displayed at this time</strong>\n    </p>\n    {/if}\n    {#if datasetResourcesResults.isError}\n    <div style=\"background-color: #bf414b\">\n        Something went wrong and resources could not be loaded. Please try again a little later.\n    </div>\n    {:else}\n        <ul>\n            {#each resources as resource, i}\n            <li class=\"resource_summary\">\n                <div><span class=\"resource_name\">{resource.resource_name}</span></div>\n                <div><span class=\"resource_id\">id: {resource.resource_id}</span></div>\n                <dl>\n                    <dt>File Type:</dt>\n                    <dd>{resource.resource_type}</dd>\n                    <dt>Data URL:</dt>\n                    <dd><a href={resource.resource_data_url} target=\"_blank\">{resource.resource_data_url}</a></dd>\n                        {#if resource.resource_metadata}\n                            {#each Object.entries(resource.resource_metadata) as metadata}\n                                <dt>{metadata[0]}:</dt>\n                                {#if (typeof metadata[1] === 'object')}\n                                <dd>{JSON.stringify(metadata[1])}</dd>\n                                {:else if (String(metadata[1]).substring(1, 10).includes(\"://\"))}\n                                <dd><a href={metadata[1]}>{metadata[1]}</a></dd>\n                                {:else}\n                                <dd>{metadata[1]}</dd>\n                                {/if}\n                            {/each}\n                        {/if}\n                </dl>\n            </li>\n            {/each}\n        </ul>\n    {/if}\n</section>\n{/if}\n\n",
    "<script>\n    import DTrans from './DTrans.svelte';\n\n    export let dataset;\n\n    function is_mint_understandable(ds) {\n        return ds.dataset_metadata !== undefined && ds.dataset_metadata.hasOwnProperty(\"resource_repr\");\n    }\n</script>\n\n<style>\n    .dataset_summary {\n        /*border-style: solid;*/\n        /*border-color: #eee;*/\n        /*border-width: 1px;*/\n        /*border-radius: 5px;*/\n        padding: 10px;\n        margin-left: 10px;\n        margin-top: 20px;\n        margin-right: 10px;\n        margin-bottom: 30px;\n        /*background-color: #fdfdfd;*/\n        /*box-shadow: 2px 2px 3px 1px #eee;*/\n    }\n\n    dl {\n        display: grid;\n        grid-template-columns: max-content auto;\n    }\n\n    dt {\n        grid-column-start: 1;\n        font-size:85%;\n        font-weight: lighter;\n    }\n    dd {\n        grid-column-start: 2;\n        font-size: 90%;\n        color: #333333;\n    }\n\n    fieldset {\n        border-width: 0.5px;\n        border-color: #eee;\n        border-radius: 2px;\n    }\n    fieldset legend {\n        color: #9a9a9a;\n        font-size: 90%;\n    }\n\n    .dataset_summary .dataset_id {\n        color: #bbb;\n        font-size: 75%;\n    }\n\n    h4 {\n        margin-bottom: 10px;\n        color: #333;\n    }\n\n    .a-as-button {\n        background-color: rgba(4, 143, 216, 0.8);\n        color: #fff;\n        border: none;\n        padding: 5px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        /*font-size: 0.75em;*/\n        margin: 20px 2px;\n        border-radius: 5px;\n        cursor: pointer;\n        line-height: 1.5em;\n    }\n\n</style>\n\n\n<section class=\"dataset_summary\">\n    <hr>\n    {#if (is_mint_understandable(dataset))}\n        <DTrans dataset_id={dataset.dataset_id} />\n        <hr>\n    {/if}\n    <h4>Name</h4>\n    <div style=\"padding-left: 20px\">\n        <span class=\"dataset_name\">\n\n            <strong>\n                {dataset.dataset_name}\n            </strong>\n\n        </span>\n        <div><span class=\"dataset_id\">id: {dataset.dataset_id}</span></div>\n    </div>\n\n    <h4>Description</h4>\n    <p style=\"padding-left: 20px\">{dataset.dataset_description}</p>\n    {#if dataset.dataset_metadata}\n    <h4>Additional Metadata</h4>\n    <div style=\"padding-left: 20px\">\n        <dl>\n            {#each Object.entries(dataset.dataset_metadata) as metadata}\n            <dt>{metadata[0]}:</dt>\n                {#if (typeof metadata[1] === 'object')}\n                <dd>{JSON.stringify(metadata[1])}</dd>\n                {:else if (String(metadata[1]).substring(1, 10).includes(\"://\"))}\n                <dd><a href={metadata[1]}>{metadata[1]}</a></dd>\n                {:else}\n                <dd>{metadata[1]}</dd>\n                {/if}\n            {/each}\n        </dl>\n    </div>\n    {/if}\n\n    <hr>\n    <button onclick=\"location.href='/datasets/{dataset.dataset_id}';\" type=\"button\">View more detailed information...</button>\n\n<!--    <a href=\"/datasets/{dataset.dataset_id}\" class=\"a-as-button\">V.</a>-->\n</section>\n",
    "<script>\n    import { onMount } from 'svelte';\n    import {queryTemporalCoverage} from './stores';\n\n    let containerHeight = 300;\n    let containerWidth = 200;\n\n    let timeRangeEnd = 160;\n    let timeLine = 50;\n\n    let timeLinePadding = 40;\n    let isModified = false;\n\n    let highlightStart;\n    let highlightEnd;\n\n    let selectedElement;\n    let dragStartY;\n    let dragYOffset;\n    let coordinateTransformMatrix;\n\n    let leftRangeSlider;\n    let rightRangeSlider;\n\n    let minDate = new Date(\"1980-01-01T00:00:00\");\n    let maxDate = new Date();\n    $: minYear = minDate.getUTCFullYear();\n    $: maxYear = maxDate.getUTCFullYear();\n    let step = 5;\n    $: years = Array.from({ length: (maxYear - minYear) / step + 1}, (_, i) => minYear + (i * step));\n\n    $: highlightSliderStart = dateToCoordinates(highlightStart, minDate, maxDate, containerHeight);\n    $: highlightSliderEnd = dateToCoordinates(highlightEnd, minDate, maxDate, containerHeight);\n\n\n    let temporalCoverageStart = $queryTemporalCoverage['start_time'] || minDate;\n    let temporalCoverageEnd = $queryTemporalCoverage['end_time'] || maxDate;\n\n    let temporalCoverageStartDate;\n    let temporalCoverageEndDate;\n\n    let rangeSliderStart;\n    let rangeSliderEnd;\n\n    export function displayTemporalCoverage(start, end) {\n        // TODO validation logic: check start < end, set minStart, maxEnd\n\n        if (start !== undefined && end !== undefined) {\n            highlightStart = new Date(start);\n            highlightEnd  = new Date(end);\n\n        }\n    }\n\n    export function hideTemporalCoverage() {\n        highlightStart = undefined;\n        highlightEnd = undefined;\n    }\n\n    function syncTemporalCoverageStart(newTemporalCoverageStart) {\n        temporalCoverageStart = newTemporalCoverageStart;\n\n        const newQueryTemporalCoverage = $queryTemporalCoverage;\n        newQueryTemporalCoverage['start_time'] = temporalCoverageStart;\n        queryTemporalCoverage.set(newQueryTemporalCoverage);\n\n        temporalCoverageStartDate = formattedDate(temporalCoverageStart);\n        rangeSliderStart = dateToCoordinates(temporalCoverageStart, minDate, maxDate, containerHeight);\n    }\n\n    function syncTemporalCoverageEnd(newTemporalCoverageEnd) {\n        temporalCoverageEnd = newTemporalCoverageEnd;\n\n        const newQueryTemporalCoverage = $queryTemporalCoverage;\n        newQueryTemporalCoverage['end_time'] = temporalCoverageEnd;\n        queryTemporalCoverage.set(newQueryTemporalCoverage);\n\n        temporalCoverageEndDate = formattedDate(temporalCoverageEnd);\n        rangeSliderEnd = dateToCoordinates(temporalCoverageEnd, minDate, maxDate, containerHeight);\n    }\n\n    syncTemporalCoverageStart(temporalCoverageStart);\n    syncTemporalCoverageEnd(temporalCoverageEnd);\n\n    function dateToCoordinates(date, dateMin, dateMax, rangeLength) {\n        return timeLinePadding + (Date.parse(date) - Date.parse(dateMin)) / (Date.parse(dateMax) - Date.parse(dateMin)) * (rangeLength - 2*timeLinePadding);\n    }\n\n    function coordinatesToDate(x, xmin, xmax, dateMin, dateMax) {\n        return new Date(Date.parse(dateMin) + (x - xmin) / (xmax - xmin) * (Date.parse(dateMax) - Date.parse(dateMin)));\n    }\n\n    function getMousePositionInSVGSpace(evt, coordinateTransformMatrix) {\n        if (coordinateTransformMatrix !== undefined) {\n            return {\n                x: (evt.clientX - coordinateTransformMatrix.e) / coordinateTransformMatrix.a,\n                y: (evt.clientY - coordinateTransformMatrix.f) / coordinateTransformMatrix.d\n            };\n        }\n        // const CTM = evt.target.getScreenCTM();\n    }\n\n    function formattedDate(date){\n        const year = String(date.getUTCFullYear());\n        const month = String(date.getUTCMonth() + 1).padStart(2, \"0\");\n        const day = String(date.getUTCDate()).padStart(2, \"0\");\n\n        return `${year}-${month}-${day}`;\n    }\n\n    function createDraggable(params) {\n        let {xmin, ymin, xmax, ymax, x, y} = params;\n\n        if (xmin === undefined) {\n            xmin = -Infinity;\n        }\n\n        if (xmax === undefined) {\n            xmax = Infinity;\n        }\n\n        if (ymin === undefined) {\n            ymin = -Infinity;\n        }\n\n        if (ymax === undefined) {\n            ymax = Infinity;\n        }\n        function moveTo(newX, newY) {\n           x = Math.max(Math.min(xmax, newX), xmin);\n           y = Math.max(Math.min(ymax, newY), ymin);\n        }\n\n        return Object.freeze({x, y, moveTo});\n    }\n\n    onMount(() => {\n        const svg_container = document.getElementById(\"timeline-container\");\n        if (svg_container !== undefined) {\n            coordinateTransformMatrix = svg_container.getScreenCTM();\n        }\n\n        leftRangeSlider = document.getElementById(\"range-slider-left\");\n        rightRangeSlider = document.getElementById(\"range-slider-right\");\n\n\n    });\n\n\n    function startDrag(event) {\n        const coords = getMousePositionInSVGSpace(event, coordinateTransformMatrix);\n        // console.log(coords.x + \", \" + coords.y);\n\n\n        const draggableCandidates = Array.from([leftRangeSlider, rightRangeSlider])\n            .filter((el) => {\n                const bbox = el.getBBox();\n                const xmin = bbox.x - 2;\n                const xmax = bbox.x + bbox.width + 2;\n\n                const ymin = bbox.y - 2;\n                const ymax = bbox.y + bbox.height + 2;\n\n                return coords.x >= xmin && coords.x <= xmax && coords.y >= ymin && coords.y <= ymax;\n            });\n\n        // console.log(draggableCandidates);\n\n        // draggableCandidates\n\n\n        if (draggableCandidates.length > 0) {\n            // console.log(\"DRAGGABLE CANDIDATES FOUND\");\n            selectedElement = draggableCandidates[0];\n            dragStartY = coords.y;\n            dragYOffset = 0;\n        }\n        // event.preventDefault();\n        //\n        // dragStartX = timeRangeStart;\n        // dragXOffset = 0;\n        // console.log(JSON.stringify(dragStartX));\n        // console.log(\"DRAG STARTED\");\n    }\n\n    function drag(event) {\n        // event.preventDefault();\n        // console.log(selectedElement);\n        // console.log(event.movementX);\n        //\n        if (selectedElement !== undefined && dragStartY !== undefined && dragYOffset !== undefined) {\n            dragYOffset += event.movementY;\n            // dragXOffset += Math.min(Math.max(event.movementX;, 5), timeRangeEnd - 20)\n            // console.log(\"dragYOffset \" + dragYOffset);\n            const newPositionCandidate = dragStartY + dragYOffset;\n\n            if (selectedElement.id === 'range-slider-left') {\n                const newRangeSliderStart = Math.min(Math.max(newPositionCandidate, timeLinePadding), rangeSliderEnd - 20);\n                const newTemporalCoverageStart = coordinatesToDate(newRangeSliderStart, timeLinePadding, containerHeight - timeLinePadding, minDate, maxDate);\n                // console.log(newTemporalCoverageStart);\n                syncTemporalCoverageStart(newTemporalCoverageStart);\n            }\n\n            if (selectedElement.id === 'range-slider-right') {\n                const newRangeSliderEnd = Math.min(Math.max(newPositionCandidate, rangeSliderStart + 20), containerHeight - timeLinePadding);\n                const newTemporalCoverageEnd = coordinatesToDate(newRangeSliderEnd, timeLinePadding, containerHeight - timeLinePadding, minDate, maxDate);\n                syncTemporalCoverageEnd(newTemporalCoverageEnd);\n            }\n            // const xmin = 5;\n            // const xmax = timeRangeEnd - 20;\n\n\n            // console.log(dragXOffset);\n            // console.log(parseFloat(selectedElement.getAttributeNS(null, \"x\")));\n        }\n    }\n\n    function endDrag(event) {\n        // event.preventDefault();\n        // console.log(JSON.stringify(dragStartX));\n        selectedElement = undefined;\n        dragStartY = undefined;\n        dragYOffset = undefined;\n        // console.log(JSON.stringify(event));\n    }\n\n    function handleDateInput(value, targetType) {\n\n        const parsedDate = new Date(value);\n        const year = parsedDate.getUTCFullYear();\n\n        // if value is not a valid date, parsedDate.getUTCFullYear() returns NaN\n        if (!Number.isNaN(year)) {\n            if (targetType === 'temporalCoverageStart') {\n                const isValidDate = Date.parse(parsedDate) < Date.parse(temporalCoverageEnd) && year >= minYear;\n                if (isValidDate) {\n                    syncTemporalCoverageStart(parsedDate);\n                } else {\n                    syncTemporalCoverageStart(temporalCoverageStart);\n                }\n            }\n\n            else if (targetType === 'temporalCoverageEnd') {\n                const isValidDate = year <= maxYear && Date.parse(parsedDate) > Date.parse(temporalCoverageStart);\n                if (isValidDate) {\n                    syncTemporalCoverageEnd(parsedDate);\n                } else {\n                    syncTemporalCoverageEnd(temporalCoverageEnd);\n                }\n            }\n        }\n\n\n    }\n</script>\n\n<style>\n    .timeline-container {\n        border: 1px solid #ddd;\n        border-radius: 2px;\n        /*padding: 5px;*/\n        margin-left: 10px;\n    }\n\n    .timeline {\n        display: grid;\n        grid-template-columns: 150px 200px;\n        grid-template-rows: auto;\n        grid-template-areas:\n                \"left right\";\n\n        margin: 5px;\n        width: 350px;\n        height: 300px;\n        background-color: #fff;\n        /*height: 200px;*/\n        /*position: absolute;*/\n        /*display: flex;*/\n        /*align-items: center;*/\n    }\n\n    #timeline-container {\n        grid-area: left;\n    }\n\n    #range-slider-left {\n        cursor: row-resize;\n    }\n\n    #range-slider-right {\n        cursor: row-resize;\n    }\n\n    .rangeSliderLine {\n        stroke: #999;\n        stroke-width: 2;\n    }\n\n    .rangeSliderCircle {\n        /*stroke: -internal-root-color;*/\n        stroke: #fff;\n        fill: #999;\n        r: 2;\n        stroke-width: 1;\n        cx: 0;\n        cy: 0;\n    }\n\n    .axisLabel {\n        font-weight: lighter;\n        font-size: x-small;\n        user-select: none;\n    }\n\n    .highlightLabel {\n        /*font-weight: normal;*/\n        font-size: small;\n        user-select: none;\n    }\n\n    .form-row {\n        padding-left: 5px;\n        padding-right: 5px;\n        margin-bottom: 10px;\n        height: 30px;\n        /*display: flex;*/\n        /*justify-content: flex-start;*/\n        /*flex-direction: column;*/\n        /*flex-wrap: wrap;*/\n    }\n\n    /*.form-row input {*/\n    /*    background-color: #FFFFFF;*/\n    /*    border: 1px solid #D6D9DC;*/\n    /*    border-radius: 3px;*/\n    /*    width: 100%;*/\n    /*    padding: 7px;*/\n    /*    font-size: 14px;*/\n    /*}*/\n\n    .form-row label {\n        margin-bottom: 5px;\n    }\n\n</style>\n\n<div class=\"timeline-container\">\n    <div class=\"timeline\">\n    <span style=\"display: flex; flex-direction: column; height: 300px; grid-area: right\">\n        <div class=\"form-row\" style=\"flex: 70%; align-self: flex-start\">\n            <label for=\"temporal-coverage-start\">Temporal Coverage Start:</label>\n            <input id=\"temporal-coverage-start\" type=\"date\" name=\"Temporal Coverage Start Date\"\n                   bind:value={temporalCoverageStartDate} placeholder=\"yyyy-mm-dd\"\n                   on:input=\"{(e) => handleDateInput(e.target.value, 'temporalCoverageStart')}\">\n        </div>\n\n        <div class=\"form-row\" style=\"flex: 25%; align-self: flex-end\">\n            <label for=\"temporal-coverage-end\">Temporal Coverage End:</label>\n            <input id=\"temporal-coverage-end\" type=\"date\" name=\"Temporal Coverage End Date\"\n                   bind:value={temporalCoverageEndDate} placeholder=\"yyyy-mm-dd\"\n                   on:input=\"{(e) => handleDateInput(e.target.value, 'temporalCoverageEnd')}\">\n        </div>\n    </span>\n\n\n        <svg id=\"timeline-container\" height={containerHeight} width={containerWidth}\n             on:mousedown={startDrag}\n             on:mousemove={drag}\n             on:mouseup={endDrag}\n        >\n            <rect x=\"0\" y=\"0\" height=\"{rangeSliderEnd - rangeSliderStart}\" width=\"{timeLine}\" style=\"fill:#999;fill-opacity:0.2;z-index: -1000\" transform=\"translate(0, {rangeSliderStart})\"/>\n\n            <!--        <g id=\"rangeSliderLeft\" x=\"0\" y=\"0\" width=\"10\" height=\"{timeLine/2}\" transform=\"translate({rangeSliderStart}, {timeLine/2})\">-->\n            <g id=\"range-slider-left\">\n                <!--            <line class=\"rangeSliderLine draggable\" x1=\"0\" x2=\"0\" y1=\"{timeLine/2}\" y2=\"{timeLine}\"/>-->\n                <!--            <circle class=\"rangeSliderCircle draggable\"/>-->\n                <line class=\"rangeSliderLine\" y1=\"0\" y2=\"0\" x1=\"0\" x2=\"{timeLine}\" transform=\"translate(0, {rangeSliderStart})\"/>\n                <!--            <circle class=\"rangeSliderCircle\" transform=\"translate({rangeSliderStart}, {timeLine})\" />-->\n            </g>\n\n\n            <g id=\"range-slider-right\">\n                <line class=\"rangeSliderLine\" y1=\"0\" y2=\"0\" x1=\"0\" x2=\"{timeLine}\" transform=\"translate(0, {rangeSliderEnd})\"/>\n                <!--            <circle class=\"rangeSliderCircle\" transform=\"translate({rangeSliderEnd}, {timeLine})\" />-->\n            </g>\n\n            <line y1=\"0\" x1={timeLine} y2={containerHeight} x2={timeLine} style=\"stroke:#444;stroke-width:5\"></line>\n\n            {#each years as year}\n            <circle class=\"rangeSliderCircle\" transform=\"translate({timeLine}, {dateToCoordinates(year, minYear, maxYear, containerHeight)})\"></circle>\n            <text x=\"0\" y=\"0\" class=\"axisLabel\" transform=\"translate({timeLine + 7}, {dateToCoordinates(year, minYear, maxYear, containerHeight) + 3.5})\">{year}</text>\n            {/each}\n\n            {#if (highlightStart !== undefined && highlightEnd !== undefined)}\n            {console.log(highlightStart > containerHeight/2)}\n            {#if (highlightStart > containerHeight/2)}\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{highlightSliderStart}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{containerHeight/2 - 25}\" x1=\"{timeLine * 0.25 + 75}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{containerHeight/2 - 25}\" y2=\"{containerHeight/2 - 25}\" x1=\"{timeLine * 0.25 + 75}\" x2=\"{timeLine * 0.25 + 86}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n\n            <line y1=\"{highlightSliderEnd - 1}\" y2=\"{highlightSliderEnd}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 80}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderEnd + 1}\" y2=\"{containerHeight/2 + 15}\" x1=\"{timeLine * 0.25 + 80}\" x2=\"{timeLine * 0.25 + 80}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{containerHeight/2 + 15}\" y2=\"{containerHeight/2 + 15}\" x1=\"{timeLine * 0.25 + 80}\" x2=\"{timeLine * 0.25 + 85}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n\n            {:else if (highlightEnd < containerHeight/2)}\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{highlightSliderStart}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 80}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{containerHeight/2 - 20}\" x1=\"{timeLine * 0.25 + 80}\" x2=\"{timeLine * 0.25 + 80}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderEnd - 1}\" y2=\"{highlightSliderEnd}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderEnd + 1}\" y2=\"{containerHeight/2 + 20}\" x1=\"{timeLine * 0.25 + 75}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n\n            {:else}\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{highlightSliderStart}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderStart + 1}\" y2=\"{containerHeight/2 - 20}\" x1=\"{timeLine * 0.25 + 75}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderEnd - 1}\" y2=\"{highlightSliderEnd}\" x1=\"{timeLine * 0.25}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            <line y1=\"{highlightSliderEnd + 1}\" y2=\"{containerHeight/2 + 20}\" x1=\"{timeLine * 0.25 + 75}\" x2=\"{timeLine * 0.25 + 75}\" style=\"stroke: #111; stroke-dasharray: 5,5; stroke-width: 1px; stroke-opacity: 0.4\"/>\n            {/if}\n\n\n            <rect y=\"{highlightSliderStart}\" x=\"{timeLine * 0.25}\" height=\"{highlightSliderEnd - highlightSliderStart}\" width=\"{timeLine * 0.75}\" style=\"fill:#333;fill-opacity:0.2\"/>\n            <text y=\"{containerHeight/2 - 20}\" x=\"{timeLine * 0.25}\" class=\"highlightLabel\" transform=\"translate({timeLine * 0.25 + 75}, 0)\">{highlightStart.toLocaleDateString()}</text>\n            <text y=\"{containerHeight/2 + 20}\" x=\"{timeLine * 0.25}\" class=\"highlightLabel\" transform=\"translate({timeLine * 0.25 + 75}, 0)\">{highlightEnd.toLocaleDateString()}</text>\n\n            {/if}\n        </svg>\n    </div>\n</div>\n",
    "<script>\n    import { onMount } from 'svelte';\n    import { mapbox, key } from './mapbox.js';\n    import MapboxDraw from '@mapbox/mapbox-gl-draw';\n\n    import {querySpatialCoverage} from \"./stores\";\n\n    export let lat;\n    export let lon;\n    export let zoom;\n\n\n    export function displayGeoJSON(geometry){\n        map.addLayer({\n            'id': 'datasetSpatialCoverage',\n            'type': 'fill',\n            'source': { 'type': 'geojson', 'data': {'type': 'Feature', 'geometry': geometry } },\n            'layout': {},\n            'paint': {\n                'fill-color': '#333',\n                'fill-opacity': 0.4\n            }\n        });\n    }\n\n    export function hideGeoJSON() {\n        if (map.getLayer('datasetSpatialCoverage') !== undefined) {\n            map.removeLayer('datasetSpatialCoverage');\n        }\n\n        if (map.getSource('datasetSpatialCoverage') !== undefined) {\n            map.removeSource('datasetSpatialCoverage');\n        }\n    }\n\n    let container;\n    let map;\n\n    onMount(() => {\n        // const link = document.createElement('link');\n        // link.rel = 'stylesheet';\n        // link.href = 'https://cdnjs.cloudflare.com/ajax/libs/mapbox-gl/1.4.0/mapbox-gl.css';\n\n\n        map = new mapbox.Map({\n            container: document.getElementById(\"map\"),\n            style: 'mapbox://styles/mapbox/streets-v9',\n            center: [lon, lat],\n            zoom\n        });\n\n        const draw = new MapboxDraw({\n            displayControlsDefault: false,\n            controls: {\n                polygon: true,\n                trash: true\n            }\n        });\n        map.addControl(draw);\n\n        map.on('draw.create', setQuerySpatialCoverage);\n        map.on('draw.delete', deleteQuerySpatialCoverage);\n        map.on('draw.update', setQuerySpatialCoverage);\n\n\n\n        function setQuerySpatialCoverage(e) {\n            const data = draw.getAll();\n            const geoJsonFeature = data[\"features\"][0];\n            if (geoJsonFeature !== undefined){\n                const geoJson = geoJsonFeature['geometry'];\n                querySpatialCoverage.set(geoJson);\n            }\n\n        }\n\n        function deleteQuerySpatialCoverage(e) {\n            querySpatialCoverage.set({})\n        }\n\n        document.getElementById('map').style.height = '300px';\n        document.getElementById('map').style.width = '500px';\n\n        return () => {\n            map.remove();\n            link.parentNode.removeChild(link);\n        };\n    });\n\n</script>\n\n<style>\n    .map-wrapper {\n        border: 1px solid #ddd;\n        border-radius: 2px;\n        margin-left: 20px;\n        box-sizing: border-box;\n    }\n    #map {\n        margin: 10px;\n        width: 500px;\n        height: 300px;\n        box-sizing: border-box;\n    }\n</style>\n\n<div class=\"map-wrapper\">\n    <div id=\"map\">\n        {#if map}\n        <slot></slot>\n        {/if}\n    </div>\n</div>\n",
    "<script>\n    export let key;\n    export let val;\n\n    function format_value(value) {\n        if (String(value).substring(1, 10).includes(\"://\")) {\n            return `<a href=${value} target=\"_blank\">${value}</a>`\n        } else {\n            return value;\n        }\n    }\n</script>\n\n<style>\n    span {\n        padding: 0 0 0 1.5em;\n        background: 0 0.1em no-repeat;\n        background-size: 1em 1em;\n    }\n</style>\n\n<span>\n    <strong>{key}</strong>: {@html format_value(val)}\n</span>",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let isEditable = false;\n    export let contentKey;\n    export let contentValue;\n    export let fieldType;\n\n    let contentArea = 'contentArea';\n    let currentContentValue = contentValue;\n\n\n    let isEditing = false;\n    let isEdited = false;\n    $: isEdited = contentValue !== undefined && contentValue !== currentContentValue;\n\n    function toggleEditing() {\n        isEditing = !isEditing;\n    }\n\n    function undoChanges() {\n        currentContentValue = contentValue;\n    }\n\n    function dispatchChanges() {\n        dispatch('message', {key: contentKey, value: currentContentValue})\n    }\n</script>\n\n<style>\n    span {\n        /*background: url(tutorial/icons/folder.svg) 0 0.1em no-repeat;*/\n        /*background-size: 1em 1em;*/\n        font-weight: bold;\n\n        /*cursor: pointer;*/\n    }\n\n    [contenteditable=\"true\"] {\n        border-bottom: 1px dashed #464647;\n    }\n\n    /*.isEdited {*/\n    /*    !*background-color: lightgoldenrodyellow;*!*/\n    /*}*/\n\n    .contentArea {\n        padding: 0 0 0 0.2em;\n        border-left: 0.25em solid transparent;\n    }\n\n    .contentArea.isEdited {\n        border-left: 0.25em solid orange;\n    }\n\n    .expanded {\n        /*background-image: url(tutorial/icons/folder-open.svg);*/\n    }\n\n    /*ul {*/\n    /*    padding: 0.2em 0 0 0.5em;*/\n    /*    margin: 0 0 0 0.5em;*/\n    /*    list-style: none;*/\n    /*    border-left: 1px solid #aaa;*/\n    /*}*/\n\n    /*li {*/\n    /*    padding: 0.2em 0;*/\n    /*}*/\n</style>\n\n\n<div class=\"contentArea {isEdited ? 'isEdited' : ''}\">\n    {#if isEditable}\n        <span contenteditable='true' bind:textContent={currentContentValue} on:input={dispatchChanges}/>\n<!--        <button on:click={undoChanges}/>-->\n    {:else}\n        <span class:isEdited={isEdited}>{currentContentValue}</span>\n    {/if}\n<!--    <button on:click={toggleEditing}></button>-->\n</div>",
    "<script>\n    import KeyVal from './KeyVal.svelte';\n\n    export let expanded = false;\n    export let key;\n    export let vals;\n\n    function toggle() {\n        expanded = !expanded;\n    }\n</script>\n\n<style>\n    span {\n        padding: 0 0 0 0.25em;\n        /*background: url(tutorial/icons/folder.svg) 0 0.1em no-repeat;*/\n        /*background-size: 1em 1em;*/\n        font-weight: bold;\n        cursor: pointer;\n    }\n\n    .expanded {\n        /*background-image: url(tutorial/icons/folder-open.svg);*/\n    }\n\n    ul {\n        padding: 0.2em 0 0 0.5em;\n        margin: 0 0 0 0.5em;\n        list-style: none;\n        border-left: 1px solid #aaa;\n    }\n\n    li {\n        padding: 0.2em 0;\n    }\n</style>\n\n<span class:expanded on:click={toggle}>{expanded ? '\\u25BE' : '\\u25B8'} {key}</span>\n\n{#if expanded}\n<ul>\n    {#each Object.entries(vals) as childKeyVals}\n    <li>\n        {#if childKeyVals[1] !== undefined\n            && childKeyVals[1] !== null\n            && !Number.isNaN(childKeyVals[1])\n            && (childKeyVals[1].constructor === Object || Array.isArray(childKeyVals[1]))\n        }\n        <svelte:self key={childKeyVals[0]} vals={childKeyVals[1]} />\n        {:else}\n        <KeyVal key={childKeyVals[0]} val={childKeyVals[1]} />\n        {/if}\n    </li>\n    {/each}\n</ul>\n{/if}"
  ],
  "names": [],
  "mappings": "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"
}